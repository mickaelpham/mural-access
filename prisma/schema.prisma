// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id
  username    String    @unique
  companyId   String?   @map("company_id")
  displayName String?   @map("display_name")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  company    Company?        @relation(fields: [companyId], references: [id])
  workspaces WorkspaceUser[]
  rooms      RoomUser[]
  MuralUser  MuralUser[]

  @@index(deletedAt)
  @@index(companyId)
  @@map("user")
}

model Company {
  id        String    @id
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  users User[]

  @@index(deletedAt)
  @@map("company")
}

model Workspace {
  id        String    @id
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  users WorkspaceUser[]
  rooms Room[]

  @@index(deletedAt)
  @@map("workspace")
}

enum WorkspaceUserRole {
  ADMIN
  MEMBER
  GUEST
}

model WorkspaceUser {
  userId      String            @map("user_id")
  workspaceId String            @map("workspace_id")
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  deletedAt   DateTime?         @map("deleted_at")
  role        WorkspaceUserRole

  user      User      @relation(fields: [userId], references: [id])
  workspace Workspace @relation(fields: [workspaceId], references: [id])

  @@id([workspaceId, userId])
  @@index(deletedAt)
  @@index(userId)
  @@index([workspaceId, role])
  @@map("workspace_user")
}

model Room {
  id          String    @id
  name        String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  workspaceId String    @map("workspace_id")

  workspace Workspace  @relation(fields: [workspaceId], references: [id])
  users     RoomUser[]
  murals    Mural[]

  @@index(deletedAt)
  @@index(workspaceId)
  @@map("room")
}

enum RoomUserRole {
  ADMIN
  FACILITATOR
  EDITOR
  VIEWER
}

model RoomUser {
  roomId    String       @map("room_id")
  userId    String       @map("user_id")
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  deletedAt DateTime?    @map("deleted_at")
  role      RoomUserRole

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([roomId, userId])
  @@index(deletedAt)
  @@index(userId)
  @@index([roomId, role])
  @@map("room_user")
}

model Mural {
  id        String    @id
  title     String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  roomId    String    @map("room_id")

  room  Room        @relation(fields: [roomId], references: [id])
  users MuralUser[]

  @@index(deletedAt)
  @@index(roomId)
  @@map("mural")
}

enum MuralUserRole {
  ADMIN
  FACILITATOR
  EDITOR
  VIEWER
}

model MuralUser {
  muralId   String        @map("mural_id")
  userId    String        @map("user_id")
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  deletedAt DateTime?     @map("deleted_at")
  role      MuralUserRole

  mural Mural @relation(fields: [muralId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@id([muralId, userId])
  @@index(userId)
  @@index(deletedAt)
  @@index([muralId, role])
  @@map("mural_user")
}
